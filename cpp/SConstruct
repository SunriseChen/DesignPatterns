# -*- coding: utf-8 -*-

import os
import shutil
import atexit

#### 项目设置开始 ####

# 要创建的可执行文件的名称
PROGRAM_NAME = 'DesignPatterns'

# 项目中使用的源文件扩展名
SRC_EXT = 'cpp'

# 一般的编译选项
COMPILE_FLAGS = ['-std=c++11', '-Wall', '-Wextra']
# 附加的 Release 编译选项
# https://gcc.gnu.org/onlinedocs/gcc-6.3.0/gcc/Optimize-Options.html
RELEASE_COMPILE_FLAGS = ['-D NDEBUG', '-O2']
# 附加的 Debug 编译选项
# https://gcc.gnu.org/onlinedocs/gcc-6.3.0/gcc/Debugging-Options.html
DEBUG_COMPILE_FLAGS = ['-D DEBUG', '-g']

# 一般的连接选项
# https://gcc.gnu.org/onlinedocs/gcc-6.3.0/gcc/Link-Options.html
LINK_FLAGS = ['']
# 附加的 Release 连接选项
RELEASE_LINK_FLAGS = ['-s']
# 附加的 Debug 连接选项
DEBUG_LINK_FLAGS = ['']

#### 项目设置结束 ####

src_dir = os.curdir
SRC_EXT = os.extsep + SRC_EXT.lower()

release = ARGUMENTS.get('release') == '1'
if release:
    build_dir = os.path.normpath('build/release') + os.sep
    bin_dir = os.path.normpath('bin/release') + os.sep
else:
    build_dir = os.path.normpath('build/debug') + os.sep
    bin_dir = os.path.normpath('bin/debug') + os.sep
if not os.path.exists(build_dir):
    os.makedirs(build_dir)
if not os.path.exists(bin_dir):
    os.makedirs(bin_dir)

PROGRAM_NAME = bin_dir + PROGRAM_NAME 

env = Environment(CXXFLAGS=COMPILE_FLAGS, LINKFLAGS=LINK_FLAGS)
if release:
    env.Append(CXXFLAGS=RELEASE_COMPILE_FLAGS, LINKFLAGS=RELEASE_LINK_FLAGS)
else:
    env.Append(CXXFLAGS=DEBUG_COMPILE_FLAGS, LINKFLAGS=DEBUG_LINK_FLAGS)

src_paths = []
for (dirpath, dirnames, filenames) in os.walk(src_dir):
    src_paths.extend([os.path.join(dirpath, filename) for filename in filenames
                      if filename.lower().endswith(SRC_EXT)])

objects = []
for src_path in src_paths:
    target = build_dir + src_path[len(src_dir + os.sep):-len(SRC_EXT)] + '.o'
    objects.append(env.Object(target, src_path))

env.Program(PROGRAM_NAME, objects)
shutil.copy(PROGRAM_NAME + '.exe', os.curdir)

def display_build_finished():
    print('构建完成！')

atexit.register(display_build_finished)
